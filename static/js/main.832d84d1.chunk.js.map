{"version":3,"sources":["components/Sidebar/styles.js","components/Sidebar/Sidebar.js","components/Sidebar/index.js","components/styles.js","components/UserHeader.js","MobileNav/styles.js","MobileNav/index.js","MobileNav/MobileNav.js","components/Layout/styles.js","components/Layout/index.js","components/Layout/Layout.js","styles.js","pages/Me/styles.js","pages/Me/index.js","pages/Me/Me.js","pages/Projects/styles.js","pages/Projects/index.js","pages/Projects/Projects.js","pages/Work/styles.js","pages/Work/index.js","pages/Work/Work.js","pages/Education/styles.js","pages/Education/index.js","pages/Education/Education.js","pages/Anime/AnimeFave/styles.js","pages/Anime/AnimeFave/AnimeFave.js","pages/Anime/AnimeFave/index.js","pages/Anime/AnimeCurrent/styles.js","pages/Anime/AnimeCurrent/AnimeCurrent.js","pages/Anime/AnimeCurrent/index.js","pages/Anime/AnimeComplete/styles.js","pages/Anime/AnimeComplete/AnimeComplete.js","pages/Anime/AnimeComplete/index.js","pages/index.js","App.js","serviceWorker.js","index.js"],"names":["StyledSideNav","styled","SideNav","items","name","path","Sidebar","location","useLocation","isFixedNav","expanded","isChildOfHeader","aria-label","map","i","isActive","pathname","element","Link","to","key","title","href","HeaderContainer","div","isHome","Header","Image","img","ViewResumeLink","a","UserHeader","user","src","basics","picture","alt","username","target","rel","label","region","yearsOfExperience","headline","Container","Spacer","NavWrapper","NavLink","NavButton","Button","MobileNav","hasIconOnly","renderIcon","User32","iconDescription","tooltipPosition","Code32","Portfolio32","Education32","FaceActivated24","StyledContent","Content","Layout","children","SectionTitle","h3","Paragraph","p","Pill","span","blue","ProfileLink","li","Me","summary","skills","skill","profiles","profile","network","url","ProjectItem","white","ProjectTitle","h4","SkillContainer","Projects","projects","project","languages","libraries","item","j","WorkItem","WorkTitle","JobTitle","Work","work","position","company","start","year","end","EducationItem","Institution","Degree","Education","education","studyType","area","description","replace","AnimeItem","AnimeName","AnimeDescription","options","method","headers","Accept","body","JSON","stringify","query","AnimeFave","props","state","isLoading","favourites","statistics","total_count","edges","handleData","bind","handleFetch","handleError","handleResponse","this","fetch","then","catch","response","json","ok","Promise","reject","error","alert","console","log","count","data","animeData","User","setState","anime","animeFavs","d","node","english","className","native","coverImage","large","paddingLeft","value","Math","round","meanScore","starCount","starColor","emptyStarColor","editing","style","width","Progress","percent","size","color","active","episodes","React","Component","AnimeCurrent","mediaList","AnimeList","Page","media","score","progress","AnimeComplete","stats","User_Stats","class","Pages","exact","App","useState","setUser","useEffect","res","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.832d84d1.chunk.js","sourcesContent":["import styled from 'styled-components'\r\nimport { SideNav } from 'carbon-components-react/lib/components/UIShell'\r\n\r\nexport const StyledSideNav = styled(SideNav)`\r\n  @media (max-width: 640px) {\r\n    display: none;\r\n  }\r\n  `","import React from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { SideNavItems, SideNavLink, SideNavMenu, SideNavMenuItem } from 'carbon-components-react/lib/components/UIShell';\r\n\r\nimport { StyledSideNav } from './styles';\r\n\r\nconst items = [\r\n  { name: 'Me', path: '/websitev2' },\r\n  { name: 'Projects', path: '/projects' },\r\n  { name: 'Work', path: '/work' },\r\n  { name: 'Education', path: '/education' },\r\n  \r\n];\r\n\r\nconst Sidebar = () => {\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <StyledSideNav isFixedNav expanded isChildOfHeader={false} aria-label=\"Side navigation\">\r\n      <SideNavItems>\r\n        {items.map(i => (\r\n          <SideNavLink\r\n            isActive={\r\n              location.pathname === '/' && i.path === '/' ? true : location.pathname === i.path\r\n            }\r\n            element={Link}\r\n            to={i.path}\r\n            key={i.name}\r\n          >\r\n            {i.name}\r\n          </SideNavLink>\r\n          \r\n        ))}\r\n        <SideNavMenu title=\"Anime\" >\r\n          <SideNavMenuItem element={Link} to={'anime/watching'} key={'Watching'} href=\"/watching\">\r\n            Watching\r\n          </SideNavMenuItem>\r\n          <SideNavMenuItem element={Link} to={'anime/favorites'} key={'Favorites'}href=\"/favorites\">\r\n            Favorites\r\n          </SideNavMenuItem>\r\n          <SideNavMenuItem element={Link} to={'anime/completed'} key={'Completed'}href=\"/completed\">\r\n            Completed\r\n          </SideNavMenuItem>\r\n        </SideNavMenu>\r\n      </SideNavItems>\r\n    </StyledSideNav>\r\n  );\r\n};\r\n\r\nexport default Sidebar;","import Sidebar from \"./Sidebar\"\r\nexport default Sidebar","import styled from 'styled-components';\r\n\r\nexport const HeaderContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  @media (max-width: 640px) {\r\n    display: ${({ isHome }) => (!isHome ? 'none' : 'flex')};\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n  @media (max-width: 640px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  width: 200px;\r\n  margin-right: 1rem;\r\n  border-radius: 2px;\r\n`;\r\n\r\nexport const ViewResumeLink = styled.a`\r\n  display: flex;\r\n  text-decoration: none;\r\n  padding: 0.75rem 1.5rem;\r\n  font-weight: bold;\r\n  align-items: center;\r\n  margin-top: 1rem;\r\n  border: 2px solid #2ecc40;\r\n  background-color: rgba(46, 204, 64, 0.3);\r\n  transition: background-color 250ms ease;\r\n  &:hover {\r\n    background-color: #2ecc40;\r\n  }\r\n  svg {\r\n    fill: white;\r\n    margin-left: 8px;\r\n  }\r\n`;","import React from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { ArrowRight16 } from '@carbon/icons-react';\r\nimport { HeaderContainer, Header, Image, ViewResumeLink } from './styles';\r\n\r\nconst UserHeader = ({ user }) => {\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <HeaderContainer isHome={location.pathname === '/'}>\r\n      <Header>\r\n        <Image src={user.basics.picture} />\r\n        <div>\r\n          \r\n          <h2>{user.basics.name}<img src=\"https://piskel-imgstore-b.appspot.com/img/7c148d8a-b8c2-11e9-bf50-69f4a3300400.gif\" alt=\"Hakeem the Wizard\" /> </h2>\r\n          <h4>\r\n            <a\r\n              href={`https://gitconnected.com/${user.basics.username}`}\r\n              target=\"_blank\"\r\n              rel=\"noreferrer noopener\"\r\n            >\r\n              @{user.basics.username}\r\n            </a>\r\n          </h4>\r\n          \r\n          <p>{user.basics.label}</p>\r\n          <p>Coding in {user.basics.region}</p>\r\n          \r\n          <p>Lv.{user.basics.yearsOfExperience} Developer </p>\r\n          <p>{user.basics.headline}</p>\r\n          \r\n        </div>\r\n      </Header>\r\n      <div>\r\n        <ViewResumeLink\r\n          href={`https://gitconnected.com/${user.basics.username}/resume`}\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          <span>View Résumé</span>\r\n          <ArrowRight16 />\r\n        </ViewResumeLink>\r\n      </div>\r\n    </HeaderContainer>\r\n  );\r\n};\r\n\r\nexport default UserHeader;","import styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport Button from 'carbon-components-react/lib/components/Button';\r\n\r\nexport const Container = styled.div`\r\n  display: none;\r\n  @media (max-width: 640px) {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nexport const Spacer = styled.div`\r\n  height: 48px;\r\n`;\r\n\r\nexport const NavWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  position: fixed;\r\n  width: 100vw;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 1;\r\n`;\r\n\r\nexport const NavLink = styled(Link)`\r\n  width: 25%;\r\n`;\r\n\r\nexport const NavButton = styled(Button)`\r\n  width: 100%;\r\n  justify-content: center;\r\n`;","import MobileNav from './MobileNav'\r\nexport default MobileNav","import React from 'react'\r\nimport { User32, Code32, Portfolio32, Education32,GameConsole16,FaceActivated24} from '@carbon/icons-react'\r\n\r\nimport { Container, Spacer, NavWrapper, NavButton, NavLink } from './styles'\r\n\r\nconst MobileNav = () => {\r\n  return (\r\n    <Container>\r\n      <Spacer />\r\n      <NavWrapper>\r\n        <NavLink to=\"/\">\r\n          <NavButton\r\n            hasIconOnly\r\n            renderIcon={User32}\r\n            iconDescription=\"Me\"\r\n            tooltipPosition=\"bottom\"\r\n          />\r\n        </NavLink>\r\n        <NavLink to=\"/projects\">\r\n          <NavButton\r\n            hasIconOnly\r\n            renderIcon={Code32}\r\n            iconDescription=\"Projects\"\r\n            tooltipPosition=\"bottom\"\r\n          />\r\n        </NavLink>\r\n        <NavLink to=\"/work\">\r\n          <NavButton\r\n            hasIconOnly\r\n            renderIcon={Portfolio32}\r\n            iconDescription=\"Work\"\r\n            tooltipPosition=\"bottom\"\r\n          />\r\n        </NavLink>\r\n        <NavLink to=\"/education\">\r\n          <NavButton\r\n            hasIconOnly\r\n            renderIcon={Education32}\r\n            iconDescription=\"Education\"\r\n            tooltipPosition=\"bottom\"\r\n          />\r\n        </NavLink>\r\n        <NavLink to=\"/anime\">\r\n          <NavButton\r\n            hasIconOnly\r\n            renderIcon={FaceActivated24}\r\n            iconDescription=\"Anime\"\r\n            tooltipPosition=\"bottom\"\r\n          />\r\n        </NavLink>\r\n      </NavWrapper>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default MobileNav","import styled from 'styled-components'\r\nimport { Content } from 'carbon-components-react/lib/components/UIShell'\r\n\r\nexport const StyledContent = styled(Content)`\r\n  min-height: 100vh;\r\n  @media (max-width: 640px) {\r\n    margin-left: 0 !important;\r\n  }\r\n`","import Layout from './Layout'\r\nexport default Layout","import React from 'react';\r\nimport Sidebar from '../Sidebar';\r\nimport UserHeader from '../UserHeader';\r\nimport MobileNav from '../../MobileNav';\r\n\r\nimport { StyledContent } from './styles';\r\n\r\nconst Layout = ({ user, children }) => {\r\n  return (\r\n    <>\r\n      <MobileNav />\r\n      <Sidebar />\r\n      <StyledContent>\r\n        <UserHeader user={user} />\r\n        <div>{children}</div>\r\n      </StyledContent>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Layout;","import styled from 'styled-components';\r\nimport { blue } from '@carbon/colors';\r\n\r\nexport const SectionTitle = styled.h3`\r\n  margin-top: 1.5rem;\r\n  margin-bottom: 0.5rem;\r\n`;\r\n\r\nexport const Paragraph = styled.p`\r\n  white-space: pre-wrap;\r\n`;\r\n\r\nexport const Pill = styled.span`\r\n  display: inline-block;\r\n  margin-right: 0.75rem;\r\n  margin-bottom: 0.75rem;\r\n  padding: 0.5rem 1rem;\r\n  background-color: ${blue[20]};\r\n  color: ${blue[70]};\r\n  border: 3px solid ${blue[70]};\r\n  border-radius: 2px;\r\n  font-weight: bold;\r\n`;","import styled from 'styled-components'\r\n\r\nexport const ProfileLink = styled.li`\r\n  margin-right: 0.5rem;\r\n  margin-bottom: 0.5rem;\r\n  display: inline-block;\r\n  font-size: 18px;\r\n`","\r\nimport Me from './Me';\r\nexport default Me;","import React from 'react';\r\nimport Layout from '../../components/Layout';\r\nimport { SectionTitle, Paragraph, Pill } from '../../styles';\r\nimport { ProfileLink } from './styles';\r\n\r\nconst Me = ({ user }) => {\r\n  return (\r\n    <Layout user={user}>\r\n      <div>\r\n        <SectionTitle>About Me</SectionTitle>\r\n        <Paragraph>{user.basics.summary}</Paragraph>\r\n      </div>\r\n      <div>\r\n        <SectionTitle>Skills</SectionTitle>\r\n        <div>\r\n          {user.skills.map(skill => (\r\n            <Pill key={skill.name}>{skill.name}</Pill>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <SectionTitle>Profiles</SectionTitle>\r\n        <ul>\r\n          {user.basics.profiles.map((profile, i) => (\r\n            <ProfileLink key={profile.network}>\r\n              {i !== 0 && ' | '}\r\n              <a href={profile.url} target=\"_blank\" rel=\"noreferrer noopener\">\r\n                {profile.network}\r\n              </a>\r\n            </ProfileLink>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Me;","import styled from 'styled-components'\r\nimport { white } from '@carbon/colors'\r\n\r\nexport const ProjectItem = styled.li`\r\n  margin-top: 1rem;\r\n  padding-bottom: 1rem;\r\n  border-bottom: 1px solid ${white};\r\n`\r\n\r\nexport const ProjectTitle = styled.h4`\r\n  font-weight: bold;\r\n`\r\n\r\nexport const SkillContainer = styled.div`\r\n  margin-top: 1.2rem;\r\n`","import Projects from './Projects';\r\nexport default Projects;","import React from 'react';\r\nimport Layout from '../../components/Layout';\r\nimport { SectionTitle, Pill } from '../../styles';\r\nimport { ProjectItem, ProjectTitle, SkillContainer } from './styles';\r\n\r\nconst Projects = ({ user }) => {\r\n  return (\r\n    <Layout user={user}>\r\n      <div>\r\n        <SectionTitle>Projects</SectionTitle>\r\n        <ul>\r\n          {user.projects.map((project, i) => (\r\n            <ProjectItem key={i}>\r\n              <ProjectTitle>{project.name}</ProjectTitle>\r\n              <p>{project.summary}</p>\r\n              <SkillContainer>\r\n                {[...project.languages, ...project.libraries].map((item, j) => (\r\n                  <Pill key={j}>{item}</Pill>\r\n                ))}\r\n              </SkillContainer>\r\n            </ProjectItem>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Projects;","import styled from 'styled-components'\r\nimport { white } from '@carbon/colors'\r\n\r\nexport const WorkItem = styled.li`\r\n  margin-top: 1rem;\r\n  padding-bottom: 1rem;\r\n  border-bottom: 1px solid ${white};\r\n`\r\n\r\nexport const WorkTitle = styled.h4`\r\n  font-weight: bold;\r\n`\r\n\r\nexport const JobTitle = styled.p`\r\n  font-weight: bold;\r\n  display: inline-block;\r\n`","import Work from './Work';\r\nexport default Work;","import React from 'react';\r\nimport Layout from '../../components/Layout';\r\nimport { SectionTitle, Paragraph } from '../../styles';\r\nimport { WorkItem, WorkTitle, JobTitle } from './styles';\r\n\r\nconst Work = ({ user }) => {\r\n  return (\r\n    <Layout user={user}>\r\n      <div>\r\n        <SectionTitle>Work</SectionTitle>\r\n        <ul>\r\n          {user.work.map((work, i) => (\r\n            <WorkItem key={i}>\r\n              <WorkTitle>{work.position}</WorkTitle>\r\n              <div>\r\n                <JobTitle>{work.company}</JobTitle> <span>{work.location}</span>\r\n                <span> &sdot; </span>\r\n                <span>\r\n                  {work.start.year} to {work.end.year}\r\n                </span>\r\n              </div>\r\n              <Paragraph>{work.summary}</Paragraph>\r\n            </WorkItem>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Work;","import styled from 'styled-components'\r\nimport { white } from '@carbon/colors'\r\n\r\nexport const EducationItem = styled.li`\r\n  margin-top: 1rem;\r\n  padding-bottom: 1rem;\r\n  border-bottom: 1px solid ${white};\r\n`\r\n\r\nexport const Institution = styled.h4`\r\n  font-weight: bold;\r\n`\r\n\r\nexport const Degree = styled.p`\r\n  font-weight: bold;\r\n  display: inline-block;\r\n`","\r\nimport Education from './Education';\r\nexport default Education;","import React from 'react';\r\nimport Layout from '../../components/Layout';\r\nimport { SectionTitle, Paragraph } from '../../styles';\r\nimport { EducationItem, Institution, Degree } from './styles';\r\n\r\nconst Education = ({ user }) => {\r\n  return (\r\n    <Layout user={user}>\r\n      <div>\r\n        <SectionTitle>Education</SectionTitle>\r\n        <ul>\r\n          {user.education.map((education, i) => (\r\n            <EducationItem key={i}>\r\n              <Institution>{education.position}</Institution>\r\n              <div>\r\n                <Degree>\r\n                  {education.studyType}, {education.area}\r\n                </Degree>{' '}\r\n                <span> &sdot; </span>\r\n                <span>\r\n                  {education.start.year} to {education.end.year}\r\n                </span>\r\n              </div>\r\n              <Paragraph>{education.description.replace('\\n\\n', '\\n')}</Paragraph>\r\n            </EducationItem>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Education;","import styled from 'styled-components'\r\nimport { white } from '@carbon/colors'\r\n\r\nexport const AnimeItem = styled.li`\r\n  margin-top: .5rem;\r\n  padding-bottom: 2rem;\r\n  border-bottom: 1px solid ${white};\r\n`\r\n\r\nexport const AnimeName = styled.h4`\r\n  font-weight: bold;\r\n  text-align:left;\r\n`\r\n\r\nexport const AnimeDescription = styled.p`\r\n  font-weight: bold;\r\n  padding-top:60px;\r\n  width:auto;\r\n  height: 40px;\r\n  text-align:bottom;\r\n \r\n  \r\n`\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport { SectionTitle } from \"../../../styles\";\r\nimport { AnimeItem, AnimeName, AnimeDescription } from \"./styles\";\r\nimport Layout from \"../../../components/Layout\";\r\nimport { Progress } from \"semantic-ui-react\";\r\nimport StarRatingComponent from \"react-star-rating-component\";\r\n\r\nvar query = `{\r\n  User(id: 478182) {\r\n    favourites {\r\n      anime {\r\n        edges {\r\n          node {\r\n            episodes\r\n            title {\r\n              romaji\r\n              english\r\n              native\r\n              userPreferred\r\n            }\r\n            coverImage {\r\n              extraLarge\r\n              large\r\n              medium\r\n              color\r\n            }\r\n            description(asHtml: false)\r\n            season\r\n            genres\r\n            meanScore\r\n          }\r\n        }\r\n      }\r\n    }\r\n    statistics {\r\n      anime {\r\n        episodesWatched\r\n        count\r\n        genres {\r\n          genre\r\n          count\r\n          minutesWatched\r\n        }\r\n      }\r\n    }\r\n  }\r\n  Page{\r\n    mediaList(userId:478182){\r\n      media {\r\n        id\r\n        title {\r\n          romaji\r\n          english\r\n          native\r\n          userPreferred\r\n        }\r\n      }\r\n    }\r\n    }\r\n}`;\r\nvar url = \"https://graphql.anilist.co\",\r\n  options = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Accept: \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      query: query,\r\n    }),\r\n  };\r\n\r\nclass AnimeFave extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isLoading: true,\r\n      favourites: {},\r\n      statistics: {},\r\n      total_count: 0,\r\n      edges: [],\r\n    };\r\n    this.handleData = this.handleData.bind(this);\r\n    this.handleFetch = this.handleFetch.bind(this);\r\n    this.handleError = this.handleError.bind(this);\r\n    this.handleResponse = this.handleResponse.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.handleFetch();\r\n  }\r\n  handleFetch() {\r\n    fetch(url, options)\r\n      .then(this.handleResponse)\r\n      .then(this.handleData)\r\n      .catch(this.handleError);\r\n  }\r\n  handleResponse(response) {\r\n    return response.json().then(function (json) {\r\n      return response.ok ? json : Promise.reject(json);\r\n    });\r\n  }\r\n\r\n  handleError(error) {\r\n    alert(\"Error, check console\");\r\n    console.log(this.state.edges);\r\n    //console.log(typeof this.state.edges[0].node.coverImage.large)\r\n    console.log(this.state.statistics.count);\r\n    console.log(this.state.statistics);\r\n    console.error(error);\r\n  }\r\n\r\n  handleData(data) {\r\n    var animeData = data.data.User;\r\n    console.log(animeData);\r\n    this.setState({ favourites: animeData.favourites.anime });\r\n    this.setState({ statistics: animeData.statistics.anime });\r\n    this.setState({ total_count: animeData.statistics.anime.count });\r\n    this.setState({ edges: animeData.favourites.anime.edges });\r\n  }\r\n\r\n  render() {\r\n    const { user } = this.props;\r\n    const animeData = this.state.edges;\r\n    const animeFavs = animeData.map((d) => (\r\n      <ul key={d.node.title.english}>\r\n        <AnimeItem>\r\n          <li key={d}>\r\n            <div className=\"row\">\r\n              <div className=\"column\">\r\n                <AnimeName>{d.node.title.english}</AnimeName>\r\n                <AnimeName>{d.node.title.native}</AnimeName>\r\n                <img\r\n                  src={d.node.coverImage.large}\r\n                  alt=\"Anime Cover Images\"\r\n                ></img>\r\n              </div>\r\n\r\n              <div\r\n                className=\"column\"\r\n                className=\"Progress_rating\"\r\n                style={{ paddingLeft: 20 }}\r\n              >\r\n                <h6>Rating</h6>\r\n                <StarRatingComponent\r\n                  name={\"String\"} /* name of the radio input, it is required */\r\n                  value={Math.round(\r\n                    (d.node.meanScore / 100) * 5\r\n                  )} /* number of selected icon (`0` - none, `1` - first) */\r\n                  starCount={5} /* number of icons in rating, default `5` */\r\n                  starColor={\r\n                    \"#ffb400\"\r\n                  } /* color of selected icons, default `#ffb400` */\r\n                  emptyStarColor={\r\n                    \"#FFFFFF\"\r\n                  } /* color of non-selected icons, default `#333` */\r\n                  editing={\r\n                    false\r\n                  } /* is component available for editing, default `true` */\r\n                />\r\n\r\n                <div className=\"ProgressBar\" style={{ width: 200 }}>\r\n                  <h5>Completion/episodes Watched:</h5>\r\n                  <Progress percent={100} size=\"small\" color=\"green\" active>\r\n                    {d.node.episodes}/{d.node.episodes}\r\n                  </Progress>\r\n                </div>\r\n\r\n                <AnimeDescription>{d.node.description}</AnimeDescription>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        </AnimeItem>\r\n      </ul>\r\n    ));\r\n\r\n    // Define the config we'll need for our Api request\r\n    return (\r\n      <Layout user={user}>\r\n        <div>\r\n          <SectionTitle>\r\n            Total Anime watched: {this.state.statistics.count}\r\n          </SectionTitle>\r\n          <div>{animeFavs}</div>\r\n        </div>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AnimeFave;\r\n","import AnimeFave from './AnimeFave';\r\n\r\nexport default AnimeFave;","import styled from 'styled-components'\r\nimport { white } from '@carbon/colors'\r\n\r\nexport const AnimeItem = styled.li`\r\n  margin-top: .5rem;\r\n  padding-bottom: 2rem;\r\n  border-bottom: 1px solid ${white};\r\n`\r\n\r\nexport const AnimeName = styled.h4`\r\n  font-weight: bold;\r\n  text-align:left;\r\n`\r\n\r\nexport const AnimeDescription = styled.p`\r\n  font-weight: bold;\r\n  padding-top:60px;\r\n  width:auto;\r\n  height: 40px;\r\n  text-align:bottom;\r\n \r\n  \r\n`\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { SectionTitle, } from '../../../styles';\r\nimport {AnimeItem,AnimeName,AnimeDescription} from  './styles';\r\nimport Layout from '../../../components/Layout';\r\nimport { Progress, } from 'semantic-ui-react'\r\nimport StarRatingComponent from 'react-star-rating-component';\r\n\r\nvar query=\r\n`{\r\n    Page{\r\n        mediaList(userId:478182,status:CURRENT){\r\n        progress\r\n        score\r\n          media {\r\n            id\r\n            title {\r\n              romaji\r\n              english\r\n              native\r\n              userPreferred\r\n            }\r\n            coverImage {\r\n              extraLarge\r\n              large\r\n              medium\r\n              color\r\n            }\r\n            mediaListEntry{\r\n                score\r\n            }\r\n            meanScore\r\n            episodes\r\n            description(asHtml: false)\r\n          }\r\n        }\r\n        }\r\n}`\r\n\r\nvar url = 'https://graphql.anilist.co',\r\noptions = {\r\n    method: 'POST',\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n        query: query,\r\n    })\r\n};\r\n\r\n\r\nclass AnimeCurrent extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      this.state={\r\n        mediaList:[]\r\n\r\n  \r\n      }\r\n      this.handleData=this.handleData.bind(this);\r\n      this.handleFetch=this.handleFetch.bind(this);\r\n      this.handleError=this.handleError.bind(this);\r\n      this.handleResponse=this.handleResponse.bind(this);\r\n    }\r\n  \r\n  componentDidMount(){\r\n    this.handleFetch();\r\n  }\r\n\r\n  handleFetch(){\r\n    fetch(url, options).then(this.handleResponse)\r\n    .then(this.handleData)\r\n    .catch(this.handleError);\r\n  }\r\n\r\n\r\n   handleResponse(response) {\r\n    return response.json().then(function (json) {\r\n        return response.ok ? json : Promise.reject(json);\r\n    });\r\n    }\r\n  \r\n  handleError(error) {\r\n    alert('Error, check console');\r\n    console.error(error);\r\n    }\r\n  \r\n    handleData(data) {\r\n        var AnimeList=data.data.Page.mediaList;\r\n        this.setState({mediaList:AnimeList});\r\n        console.log(this.state.mediaList);\r\n\r\n   }\r\n\r\n   render(){\r\n       const {user}=this.props;\r\n       const anime=this.state.mediaList;\r\n       const AnimeList=anime.map((d)=><ul key={d.media.title.english} >\r\n        <AnimeItem>\r\n        <div className=\"row\">\r\n        <div className=\"column\">\r\n        <AnimeName>{d.media.title.english}</AnimeName>\r\n        <AnimeName>{d.media.title.native}</AnimeName>\r\n        <img src={d.media.coverImage.large} alt=\"Anime Cover Images\"></img>\r\n       </div>\r\n      \r\n       <div className=\"column\" className=\"Progress_rating\" style={{paddingLeft:20}}>\r\n        \r\n         <h6>Rating</h6>\r\n    <StarRatingComponent \r\n    name={\"String\"} /* name of the radio input, it is required */\r\n    value={Math.round((d.score/10)*5)} /* number of selected icon (`0` - none, `1` - first) */\r\n    starCount={5} /* number of icons in rating, default `5` */\r\n    starColor={\"#ffb400\"} /* color of selected icons, default `#ffb400` */\r\n    emptyStarColor={\"#FFFFFF\"} /* color of non-selected icons, default `#333` */\r\n    editing={false} /* is component available for editing, default `true` */\r\n/>\r\n\r\n<div className=\"ProgressBar\" style={{width:300}}>\r\n  <h5>Completion/episodes Watched:</h5>\r\n  <Progress percent={(d.progress/d.media.episodes)*100} size=\"small\" color=\"green\" active >\r\n      {d.progress}/{d.media.episodes}\r\n    </Progress>\r\n</div>\r\n\r\n       \r\n       <AnimeDescription>{d.media.description}</AnimeDescription>\r\n       </div>\r\n       </div>\r\n        </AnimeItem>\r\n       </ul>);\r\n\r\n\r\n\r\n\r\n\r\n\r\n       return(\r\n           <Layout user={user}>\r\n<div>\r\n               {AnimeList}\r\n               </div>\r\n           </Layout>\r\n\r\n       );\r\n   }\r\n}\r\nexport default AnimeCurrent;","import AnimeCurrent from './AnimeCurrent';\r\n\r\nexport default AnimeCurrent;","import styled from 'styled-components'\r\nimport { white } from '@carbon/colors'\r\n\r\nexport const AnimeItem = styled.li`\r\n  margin-top: .5rem;\r\n  padding-bottom: 2rem;\r\n  border-bottom: 1px solid ${white};\r\n`\r\n\r\nexport const AnimeName = styled.h4`\r\n  font-weight: bold;\r\n  text-align:left;\r\n`\r\n\r\nexport const AnimeDescription = styled.p`\r\n  font-weight: bold;\r\n  padding-top:60px;\r\n  width:auto;\r\n  height: 40px;\r\n  text-align:bottom;\r\n \r\n  \r\n`\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { SectionTitle, } from '../../../styles';\r\nimport {AnimeItem,AnimeName,AnimeDescription} from  './styles';\r\nimport Layout from '../../../components/Layout';\r\nimport { Progress, } from 'semantic-ui-react'\r\nimport StarRatingComponent from 'react-star-rating-component';\r\n\r\nvar query=\r\n`{\r\n    Page{\r\n        mediaList(userId:478182,status:COMPLETED){\r\n        progress\r\n        score\r\n          media {\r\n            id\r\n            title {\r\n              romaji\r\n              english\r\n              native\r\n              userPreferred\r\n            }\r\n            coverImage {\r\n              extraLarge\r\n              large\r\n              medium\r\n              color\r\n            }\r\n            mediaListEntry{\r\n                score\r\n            }\r\n            meanScore\r\n            episodes\r\n            description(asHtml: false)\r\n          }\r\n        }\r\n        }\r\n        User(id: 478182) {\r\n          statistics {\r\n            anime {\r\n              episodesWatched\r\n              count\r\n              genres {\r\n                genre\r\n                count\r\n                minutesWatched\r\n              }\r\n            }\r\n          }\r\n        }\r\n        \r\n}`\r\n\r\nvar url = 'https://graphql.anilist.co',\r\noptions = {\r\n    method: 'POST',\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n        query: query,\r\n    })\r\n};\r\n\r\n\r\nclass AnimeComplete extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      this.state={\r\n        mediaList:[],\r\n        stats:[]\r\n  \r\n      }\r\n      this.handleData=this.handleData.bind(this);\r\n      this.handleFetch=this.handleFetch.bind(this);\r\n      this.handleError=this.handleError.bind(this);\r\n      this.handleResponse=this.handleResponse.bind(this);\r\n    }\r\n  \r\n  componentDidMount(){\r\n    this.handleFetch();\r\n  }\r\n\r\n  handleFetch(){\r\n    fetch(url, options).then(this.handleResponse)\r\n    .then(this.handleData)\r\n    .catch(this.handleError);\r\n  }\r\n\r\n\r\n   handleResponse(response) {\r\n    return response.json().then(function (json) {\r\n        return response.ok ? json : Promise.reject(json);\r\n    });\r\n    }\r\n  \r\n  handleError(error) {\r\n    alert('Error, check console');\r\n    console.error(error);\r\n    }\r\n  \r\n    handleData(data) {\r\n        var AnimeList=data.data.Page.mediaList;\r\n        var User_Stats=data.data.User.statistics.anime;\r\n        this.setState({mediaList:AnimeList});\r\n        this.setState({stats:User_Stats});\r\n        console.log(this.state.mediaList);\r\n        console.log(User_Stats);\r\n\r\n   }\r\n\r\n   render(){\r\n       const {user}=this.props;\r\n       const anime=this.state.mediaList;\r\n       const AnimeList=anime.map((d)=><ul key={d.media.title.english} >\r\n        <AnimeItem>\r\n        <div className=\"row\">\r\n        <div className=\"column\">\r\n        <AnimeName>{d.media.title.english}</AnimeName>\r\n        <AnimeName>{d.media.title.native}</AnimeName>\r\n        <img src={d.media.coverImage.large} alt=\"Anime Cover Images\"></img>\r\n       </div>\r\n      \r\n       <div className=\"column\" className=\"Progress_rating\" style={{paddingLeft:20}}>\r\n        \r\n         <h6>Rating</h6>\r\n    <StarRatingComponent \r\n    name={\"String\"} /* name of the radio input, it is required */\r\n    value={Math.round((d.score/10)*5)} /* number of selected icon (`0` - none, `1` - first) */\r\n    starCount={5} /* number of icons in rating, default `5` */\r\n    starColor={\"#ffb400\"} /* color of selected icons, default `#ffb400` */\r\n    emptyStarColor={\"#FFFFFF\"} /* color of non-selected icons, default `#333` */\r\n    editing={false} /* is component available for editing, default `true` */\r\n/>\r\n\r\n<div className=\"ProgressBar\" style={{width:300}}>\r\n  <h5>Completion/episodes Watched:</h5>\r\n  <Progress percent={(d.progress/d.media.episodes)*100} size=\"small\" color=\"green\" active >\r\n      {d.progress}/{d.media.episodes}\r\n    </Progress>\r\n</div>\r\n\r\n       \r\n       <AnimeDescription>{d.media.description}</AnimeDescription>\r\n       </div>\r\n       </div>\r\n        </AnimeItem>\r\n       </ul>);\r\n\r\n\r\n\r\n\r\n\r\n\r\n       return(\r\n           <Layout user={user}>\r\n<div class=\"row\">\r\n<SectionTitle>Total Anime watched: {this.state.stats.count}</SectionTitle> \r\n               \r\n               </div>\r\n               {AnimeList}\r\n           </Layout>\r\n\r\n       );\r\n   }\r\n}\r\nexport default AnimeComplete;","import AnimeComplete from './AnimeComplete';\r\n\r\nexport default AnimeComplete;","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport Me from './Me';\r\nimport Projects from './Projects';\r\nimport Work from './Work';\r\nimport Education from './Education';\r\nimport AnimeFave from './Anime/AnimeFave';\r\nimport AnimeCurrent from  './Anime/AnimeCurrent';\r\nimport AnimeComplete from './Anime/AnimeComplete';\r\n\r\nconst Pages = ({ user }) => {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/websitev2\">\r\n          <Me user={user} />\r\n        </Route>\r\n        <Route path=\"/projects\">\r\n          <Projects user={user} />\r\n        </Route>\r\n        <Route path=\"/work\">\r\n          <Work user={user} />\r\n        </Route>\r\n        <Route path=\"/education\">\r\n          <Education user={user} />\r\n        </Route>\r\n        <Route path=\"/websitev2/anime/favorites\">\r\n          <AnimeFave user={user} />\r\n        </Route>\r\n        <Route path=\"/websitev2/anime/watching\">\r\n          <AnimeCurrent user={user} />\r\n        </Route>\r\n        <Route path=\"/websitev2/anime/completed\">\r\n          <AnimeComplete user={user} />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default Pages;","import React, { useState, useEffect } from 'react';\r\nimport Pages from './pages';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [user, setUser] = useState(null);\r\n  useEffect(() => {\r\n    // NOTE: Use your username below\r\n    fetch('https://gitconnected.com/v1/portfolio/kingbuchanan')\r\n      .then(res => res.json())\r\n      .then(user => {\r\n        setUser(user);\r\n      });\r\n  }, []);\r\n\r\n  if (!user) {\r\n    return <div />;\r\n  }\r\n\r\n  return <Pages user={user} />;\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss'\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}